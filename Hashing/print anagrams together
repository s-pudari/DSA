//https://www.geeksforgeeks.org/batch/gfg-160-problems/track/hashing-gfg-160/problem/print-anagrams-together
Time Complexity: 𝑂( n * 𝑘 log 𝑘)
Space Complexity:O(n⋅k)
Time Complexity:
class Solution {
    public ArrayList<ArrayList<String>> anagrams(String[] arr) {
        // Create a map to store grouped anagrams
        Map<String, ArrayList<String>> map = new LinkedHashMap<>();

        // Traverse each string in the array
        for (String str : arr) {
            // Convert string to character array and sort it to form a key
            char[] charArray = str.toCharArray();
            Arrays.sort(charArray);
            String key = new String(charArray);

            // Add the string to the corresponding group
            map.putIfAbsent(key, new ArrayList<>());
            map.get(key).add(str);
        }

        // Create the result list of lists
        ArrayList<ArrayList<String>> result = new ArrayList<>();

        // Add all grouped anagrams to the result list
        for (ArrayList<String> group : map.values()) {
            result.add(group);
        }

        return result;
    }
}
