https://leetcode.com/problems/validate-binary-search-tree/description/
1.class Solution {
    public boolean isValidBST(TreeNode root) {
        return helper(root,Long.MIN_VALUE,Long.MAX_VALUE);
    }

    public boolean helper(TreeNode node,Long min,Long max){
        if(node == null){
            return true;
        }

       // Node's value must be within (min, max) range
        if(node.val <= min || node.val >= max){
            return false;
        }

        return helper(node.left,min,(long)node.val) && helper(node.right,(long)node.val,max);
    }
}

2.public boolean isValidBST(TreeNode root) {
        return helper(root,null,null);
    }

    public boolean helper(TreeNode node,Integer low,Integer high){
        if(node==null){
            return true;
        }

        if(low != null && node.val <= low){
            return false;

        }

        if(high != null && node.val >=high){
            return false;
        }

        boolean left = helper(node.left,low,node.val);
        boolean right = helper(node.right,node.val,high);

        return left && right;
    }
}
