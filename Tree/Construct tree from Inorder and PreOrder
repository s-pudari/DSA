https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/
https://www.geeksforgeeks.org/batch/gfg-160-problems/track/tree-gfg-160/problem/construct-tree-1
1.Use hashmap and global variable preIndex
2.put all inorder ele into hashmap with their indices
3.inIndex=get(root.data)
4.left --> start=same , end=inIndex-1
5.right -->start=inIndex+1 , end=same
class Solution {
    static int preIndex=0;
    public static Node buildTree(int inorder[], int preorder[]) {
        // code here
        HashMap<Integer,Integer> inMap = new HashMap<>();
        preIndex=0;
        
        for(int i=0;i<inorder.length;i++){
            inMap.put(inorder[i],i);
        }
        
        return constructTree(preorder,0,inorder.length-1,inMap);
        
       
       
    }
    
    public static Node constructTree(int[] preorder,int inStart,int inEnd,HashMap<Integer,Integer> inMap){
        if(inStart>inEnd) return null;
        
        Node root = new Node(preorder[preIndex++]);
        
        
        if(inStart == inEnd) return root;
        
        int inIndex=inMap.get(root.data);
        
        root.left=constructTree(preorder,inStart,inIndex-1,inMap);
        root.right=constructTree(preorder,inIndex+1,inEnd,inMap);
        
        return root;
    }
}
