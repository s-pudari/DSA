//https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/submissions/1536097570/
Using BFS level order
1.use a deque
2. pollfirst add last in normal order
3.pollLast add first in reverse order
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        if(root == null) return ans;

        Deque<TreeNode> deque = new LinkedList<>();
        boolean reverse=false;
        
        deque.offer(root);

        while(!deque.isEmpty()){
            int levelSize=deque.size();
            List<Integer> levelList = new ArrayList<>();

            for(int i=0;i<levelSize;i++){
                if(!reverse){
                    TreeNode curr=deque.pollFirst();
                    levelList.add(curr.val);
                    if(curr.left!=null){
                        deque.addLast(curr.left);
                    }
                    if(curr.right != null){
                        deque.addLast(curr.right);
                    }

                }
                else{
                    TreeNode curr = deque.pollLast();
                    levelList.add(curr.val);

                    if(curr.right != null){
                        deque.addFirst(curr.right);
                    }
                    if(curr.left != null){
                        deque.addFirst(curr.left);
                    }
                }
            }
                reverse = !reverse;
              ans.add(levelList);
        }
        return ans;
    }
}
