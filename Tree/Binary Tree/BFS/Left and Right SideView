T.C --> O(n) S.C--> O(height)
//https://www.geeksforgeeks.org/problems/left-view-of-binary-tree/1
// User function Template for Java

/* A Binary Tree node
class Node
{
    int data;
    Node left, right;

    Node(int item)
    {
        data = item;
        left = right = null;
    }
}*/
class Solution {
    // Function to return list containing elements of left view of binary tree.
    
    ArrayList<Integer> leftView(Node root) {
        // code here
        ArrayList<Integer> ans = new ArrayList<>();
        
        leftSideView(root,ans,0);
        
        return ans;
    }
    
    void leftSideView(Node root, ArrayList<Integer> ans , int level){
        if(root==null){
            return ;
            
        }
        
        if(ans.size()==level){
            ans.add(root.data);
        }
        
        leftSideView(root.left,ans,level+1);//leftSideView(root.right,ans,level+1);--
                                                                                     |-- Commented one works for Right side view
        leftSideView(root.right,ans,level+1);//leftSideView(root.left,ans,level+1);--
        
    }
}
