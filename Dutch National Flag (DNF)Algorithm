//https://leetcode.com/problems/sort-colors/
class Solution {
    public void sortColors(int[] arr) {
        int n=arr.length;

        //Approach 1

        int countZ=0;
        int countO=0;
        int countT=0;
        for(int i=0;i<n;i++)
        {
            if(arr[i]==0){
                countZ++;
            }
            else if(arr[i]==1){
                countO++;
            }
            else{
                countT++;
            }
            
        }
        for(int i=0;i<countZ;i++){
            arr[i]=0;
        }
        for(int i=countZ;i<countZ+countO;i++){
            arr[i]=1;
        }
        for(int i=countZ+countO;i<n;i++){
            arr[i]=2;
        }
    }

    //Approach 2 Dutch National Flag Algorithm(DNF)-->optimized

        int low=0, mid=0, high=n-1;

        while(mid<=high){
            if(arr[mid]==0){
                swap(arr,low,mid);
                mid++;
                low++;
            
            }
            else if(arr[mid]==1){
                mid++;
            }
            else{//arr[mid]==2
                swap(arr,mid,high);
                high--;
            }
        }
        
    
    public void swap(int[] arr,int start,int end){
        int temp=arr[start];
        arr[start]=arr[end];
        arr[end]=temp;
    }
}
