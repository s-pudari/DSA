https://www.geeksforgeeks.org/batch/gfg-160-problems/track/arrays-gfg-160/problem/max-circular-subarray-sum-1587115620
class Solution {

    // a: input array
    // n: size of array
    // Function to find maximum circular subarray sum.
    public int circularSubarraySum(int arr[]) {

        // Your code here
        int n=arr.length;
        int totalSum=0;
        int currMinSum=0,currMaxSum=0;
        int minSum=arr[0],maxSum=arr[0];
        
        for(int i=0;i<n;i++){
            //calculating minSum using kadane's algo
            currMinSum=Math.min(currMinSum+arr[i],arr[i]);
            minSum=Math.min(currMinSum,minSum);
            
            //doing same for maxSum
            currMaxSum=Math.max(currMaxSum+arr[i],arr[i]);
            maxSum=Math.max(currMaxSum,maxSum);
            
            totalSum+=arr[i];
        }
        
        int normalSum=maxSum;
        
        int circularSum=totalSum-minSum;
        
        //to handle negative nums
        if(totalSum==minSum){
            return normalSum;
        }
        
        return Math.max(normalSum,circularSum);
        
        
    }
}
