https://www.geeksforgeeks.org/batch/gfg-160-problems/track/heap-bonus-problems/problem/attend-all-meetings-ii
class Solution {
    public int minMeetingRooms(int[] start, int[] end) {
        // code here
        
        int minRooms=0;
        
        int[][] meetings=new int[start.length][2];
        
        for(int i=0;i<start.length;i++){
            meetings[i][0]=start[i];
            meetings[i][1]=end[i];
        }
        
        PriorityQueue<Integer> minHeap= new PriorityQueue<>();
        Arrays.sort(meetings,(a,b) -> a[0]-b[0]);
        for(int i=0;i<start.length;i++){
            int currentStart=meetings[i][0];
            int currentEnd = meetings[i][1];
            
            while(!minHeap.isEmpty() && minHeap.peek()<=currentStart){
                minHeap.poll();
            }
            
            minHeap.offer(currentEnd);
            minRooms=Math.max(minRooms,minHeap.size());
        }
        
        return minRooms;
    }
}
