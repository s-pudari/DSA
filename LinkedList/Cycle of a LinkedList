https://leetcode.com/problems/linked-list-cycle/
//Approach Using a slow and fast pointer usually known as Tortoise and Hare Algo 
T.C --> O(n) and S.C--> O(1)
public class Solution {
    public boolean hasCycle(ListNode head) {
         if(head==null || head.next==null){
              return false;
          }
        ListNode slow=head;
        ListNode fast=head;

        while(fast!=null && fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;

            if(slow==fast){
                return true;
            }
        }
        
       
        
        return false;
    }
}
